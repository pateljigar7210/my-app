{"ast":null,"code":"import React from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar AlertDiload = function AlertDiload(props) {\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.isViseble,\n    onRequestClose: function onRequestClose() {}\n  }, React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(Text, {\n    style: styles.modalText\n  }, props.message), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return props.okPress();\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle\n  }, \" Ok \")))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: 60\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default AlertDiload;","map":{"version":3,"sources":["/Users/avantikarathod/Documents/jigar/my-app/src/components/AlertDiload.tsx"],"names":["React","AlertDiload","props","isViseble","styles","centeredView","modalView","modalText","message","button","buttonClose","okPress","textStyle","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","buttonOpen","color","fontWeight","textAlign","marginBottom"],"mappings":"AAAA,OAAOA,KAAP,MAAgC,OAAhC;;;;;;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA4B;AAC9C,SAEI,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAEA,KAAK,CAACC,SAHjB;AAIE,IAAA,cAAc,EAAE,0BAAM,CAGrB;AAPH,KASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,KAAgCL,KAAK,CAACM,OAAtC,CAFA,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,MAAR,EAAgBL,MAAM,CAACM,WAAvB,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMR,KAAK,CAACS,OAAN,EAAN;AAAA;AAFX,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,YAJF,CAHF,CADF,CATF,CAFJ;AA4BD,CA7BD;;AA+BA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,YAAY,EAAE;AACZU,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,cAAc,EAAE,QAFJ;AAGZC,IAAAA,UAAU,EAAE,QAHA;AAIZC,IAAAA,SAAS,EAAE;AAJC,GADiB;AAO/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTL,IAAAA,UAAU,EAAE,QALH;AAMTM,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAPL;AAWTC,IAAAA,aAAa,EAAE,IAXN;AAYTC,IAAAA,YAAY,EAAE,CAZL;AAaTC,IAAAA,SAAS,EAAE;AAbF,GAPoB;AAsB/BpB,EAAAA,MAAM,EAAE;AACNY,IAAAA,YAAY,EAAE,EADR;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNO,IAAAA,SAAS,EAAE;AAHL,GAtBuB;AA2B/BC,EAAAA,UAAU,EAAE;AACVV,IAAAA,eAAe,EAAE;AADP,GA3BmB;AA8B/BV,EAAAA,WAAW,EAAE;AACXU,IAAAA,eAAe,EAAE;AADN,GA9BkB;AAiC/BR,EAAAA,SAAS,EAAE;AACTmB,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,SAAS,EAAE,QAHF;AAITR,IAAAA,KAAK,EAAC;AAJG,GAjCoB;AAuC/BlB,EAAAA,SAAS,EAAE;AACT2B,IAAAA,YAAY,EAAE,EADL;AAETD,IAAAA,SAAS,EAAE;AAFF;AAvCoB,CAAlB,CAAf;AA6CA,eAAehC,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Alert, Modal, StyleSheet, Text, Pressable, View ,ActivityIndicator} from \"react-native\";\n\ninterface AlertDiloadProps{\n    message:string\n  isViseble:boolean\n  okPress:()=>void\n}\n\nconst AlertDiload = (props:AlertDiloadProps) => {\n  return (\n   \n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={props.isViseble}\n        onRequestClose={() => {\n         \n         \n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n\n          <Text style={styles.modalText}>{props.message}</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => props.okPress()}\n            >\n              <Text style={styles.textStyle}> Ok </Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      \n     \n\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width:60\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n\nexport default AlertDiload;"]},"metadata":{},"sourceType":"module"}